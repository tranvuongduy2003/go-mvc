app:
  name: "go-mvc"
  version: "1.0.0"
  environment: "production"
  debug: false
  timezone: "UTC"
  graceful_stop: "30s"

server:
  http:
    host: "0.0.0.0"
    port: 8080
    read_timeout: "30s"
    write_timeout: "30s"
    idle_timeout: "120s"
    max_header_bytes: 1048576
    tls:
      enabled: true
      cert_file: "/etc/ssl/certs/app.crt"
      key_file: "/etc/ssl/private/app.key"
    cors:
      enabled: true
      allowed_origins: ["https://app.domain.com", "https://admin.domain.com"]
      allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS", "PATCH"]
      allowed_headers: ["Content-Type", "Authorization", "X-Requested-With"]
      exposed_headers: ["X-Total-Count"]
      max_age: 86400
  grpc:
    host: "0.0.0.0"
    port: 9090

database:
  primary:
    driver: "postgres"
    host: "${DB_PRIMARY_HOST}"
    port: 5432
    username: "${DB_PRIMARY_USERNAME}"
    password: "${DB_PRIMARY_PASSWORD}"
    database: "${DB_PRIMARY_NAME}"
    ssl_mode: "require"
    max_open_conns: 100
    max_idle_conns: 10
    conn_max_lifetime: "1h"
    conn_max_idle_time: "10m"
    log_level: "error"
  replica:
    driver: "postgres"
    host: "${DB_REPLICA_HOST}"
    port: 5432
    username: "${DB_REPLICA_USERNAME}"
    password: "${DB_REPLICA_PASSWORD}"
    database: "${DB_REPLICA_NAME}"
    ssl_mode: "require"
    max_open_conns: 50
    max_idle_conns: 5
    conn_max_lifetime: "1h"
    conn_max_idle_time: "10m"
    log_level: "error"

redis:
  host: "${REDIS_HOST}"
  port: 6379
  password: "${REDIS_PASSWORD}"
  db: 0
  pool_size: 20
  min_idle_conns: 5
  dial_timeout: "5s"
  read_timeout: "3s"
  write_timeout: "3s"
  idle_timeout: "5m"

logger:
  level: "info"
  encoding: "json"
  output_paths: ["stdout"]
  error_paths: ["stderr"]
  development: false

jwt:
  secret: "${JWT_SECRET}"
  access_expiry: "15m"
  refresh_expiry: "7d"
  issuer: "go-mvc"
  audience: "go-mvc-users"

metrics:
  enabled: true
  path: "/metrics"
  port: 9090

tracing:
  enabled: true
  service_name: "go-mvc"
  endpoint: "${JAEGER_ENDPOINT}"
  sample_rate: 0.01

rate_limit:
  enabled: true
  rps: 1000
  burst: 2000

messaging:
  nats:
    url: "${NATS_URL}"
    max_reconnects: 10
    reconnect_wait: "2s"
    timeout: "5s"
    drain_timeout: "30s"

external:
  payment_service:
    base_url: "${PAYMENT_SERVICE_URL}"
    api_key: "${PAYMENT_SERVICE_API_KEY}"
    timeout: "30s"
    max_retries: 3
  email_service:
    provider: "sendgrid"
    api_key: "${SENDGRID_API_KEY}"
    from: "${EMAIL_FROM_ADDRESS}"

feature:
  enable_swagger: false
  enable_pprof: false
  enable_health_check: true
  enable_metrics: true
